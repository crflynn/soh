name: ci

on:
  push:
    branches:
    - master
  pull_request:

jobs:

  build-ubuntu:
    name: Build ubuntu
    runs-on: ubuntu-latest
    env:
      TARGET: x86_64-unknown-linux-musl
      PKG_CONFIG_ALLOW_CROSS: 1
    steps:
      # missing -lxcb-shape and -lxcb-xfixes
      # add musl tools for build
      - name: Install libs
        run: sudo apt install libxcb-composite0-dev musl-tools
      - name: Checkout
        uses: actions/checkout@master
      - name: Add target
        run: rustup target add ${{ env.TARGET }}
      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Add rustfmt
        run: rustup component add rustfmt
      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-
      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ env.TARGET }} --features vendored-openssl
      - name: Push artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.TARGET }}
          path: target/${{ env.TARGET }}/release/soh

  build-mac:
    name: Build mac
    runs-on: macOS-latest
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.7
      TARGET: x86_64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Add rustfmt
        run: rustup component add rustfmt
      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-
      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ env.TARGET }}
      - name: Push artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.TARGET }}
          path: target/${{ env.TARGET }}/release/soh

# # unable to get openssl to be picked up by cargo
#  build-win:
#    name: Build win
#    runs-on: windows-latest
#    env:
#      VCPKGRS_DYNAMIC: 1
#      TARGET: x86_64-pc-windows-msvc
#    steps:
#      # add openssl
#      - name: Install libs
#        run: |
#          vcpkg integrate install
#          vcpkg install openssl-windows:x64-windows
#      - name: Checkout
#        uses: actions/checkout@master
#      - name: Setup rust
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          override: true
#      - name: Add rustfmt
#        run: rustup component add rustfmt
#      - name: Cargo fmt
#        uses: actions-rs/cargo@v1
#        with:
#          command: fmt
#          args: --all -- --check
#      - name: Cargo test
#        uses: actions-rs/cargo@v1
#        with:
#          command: test
#      - name: Cargo clippy
#        uses: actions-rs/cargo@v1
#        with:
#          command: clippy
#          args: -- -D warnings
#      - name: Cargo build
#        uses: actions-rs/cargo@v1
#        with:
#          command: build
#          args: --release --target ${{ env.TARGET }}
#      - name: Push artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TARGET }}
#          path: target/${{ env.TARGET }}/release/soh
